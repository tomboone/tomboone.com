#file: noinspection UndefinedAction
name: Terraform, Build, and Deploy to Stage

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'index.html'
      - 'images/**'
      - '.github/workflows/build-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_USE_OIDC: true
  TF_WORKING_DIR: ./terraform

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    env:
      TF_STATE_RG: ${{ secrets.TF_STATE_RG }}
      TF_STATE_SA: ${{ secrets.TF_STATE_SA }}
      TF_STATE_CONTAINER: ${{ secrets.TF_STATE_CONTAINER }}
      TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}

    outputs:
      default_host_name: ${{ steps.get_outputs.outputs.default_host_name }}
      api_key: ${{ steps.get_outputs.outputs.api_key }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.TF_STATE_RG }}" \
            -backend-config="storage_account_name=${{ env.TF_STATE_SA }}" \
            -backend-config="container_name=${{ env.TF_STATE_CONTAINER }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}"

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: get_outputs
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          DEFAULT_HOST_NAME=$(terraform output -raw default_host_name)
          API_KEY=$(terraform output -raw api_key)

          echo "default_host_name=$DEFAULT_HOST_NAME" >> "$GITHUB_OUTPUT"
          echo "api_key=$API_KEY" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy to Azure Static Web App
    runs-on: ubuntu-latest
    needs: terraform
    environment: production

    env:
      API_KEY: ${{ needs.terraform.outputs.api_key }}
      REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.API_KEY }}
          repo_token: ${{ env.REPO_TOKEN }}
          action: "upload"
          app_location: "/"
          output_location: "/"
          skip_app_build: true
